
<% layout('layouts/boilerplate') %>

<h1 class="text-center mt-3">ðŸš€ Your Dashboard ðŸš€</h1>
<div class="justify-content-center text-center rounded shadow p-3 m-2" style="background-color:rgb(6, 18, 37); color: white;">
  <h1 class="title">Your Stats</h1>
  <div class="grid text-center" style="--bs-gap: .25rem 1rem;">
    
    <div class="snippet"><b>Total Concepts added: </b> <%= tempQuestions.length %> </div>
    <div class="g-col-6"><b>Total Questions answered:</b> <%= answered %> </div>
    <div class="g-col-6">Total Score: <%= score %> </div>
    <div class="g-col-6">Correctness: <%= correctness %></div>
    <p><span style="font-size:small; color: rgb(200, 200, 200);">*Stats are based on questions currently present in the database</span></p>
</div>
<hr>
<h3>Quiz of the Day</h3>

<% if (displayQuestion !== undefined){ %>


<div class="d-flex justify-content-center">

  <form name="dashboard" style="background-color:rgb(6, 18, 37); color: white;" class="p-3 rounded shadow" method="POST" action="/dashboard">
    <input name="questionAnswered" type="hidden" value="<%=displayQuestion %>">
    <div class="mb-3">
      <p><b>Question: </b> <%=displayQuestion %></p>
    </div>
    <label class="mb-3">Choose the correct answer</label>
    <div class="mb-3 form-check">
      <label class="form-check-label" for="option1"><%=option1 %></label>
      <input type="checkbox" class="form-check-input" name="firstOption" id="option1" value="<%=option1 %>">
    </div>
    <div class="mb-3 form-check">
      <label class="form-check-label" for="option2"><%=option2 %></label>
      <input type="checkbox" class="form-check-input" name="secondOption" value="<%=option2 %>" id="option2" >
    </div>
    <div class="mb-3 form-check">
      <label class="form-check-label" for="option2"><%=option3 %></label>
      <input type="checkbox" class="form-check-input" name="thirdOption" id="option3" value="<%=option3 %>">
    </div>
    <div class="mb-3 form-check">
      <label class="form-check-label" for="option4"><%=option4 %></label>
      <input type="checkbox" class="form-check-input" id="option4" value="<%=option4 %>" name="fourthOption">
    </div>
    <button type="submit" class="btn btn-light">Submit</button>
  </form>

<% } else { %>
  <p>You haven't uploaded any concepts yet. Let's get started.</p>
  <button class="btn btn-dark"><a href='/concepts' style="color: white; text-decoration: none;">Add Concepts</a></button>
<% } %>
  </div>

</div>

<!-- Work in progress
<div class="d-flex justify-content-center">
  <div class="d-flex justify-content-center">
    <form id="quizForm" style="background-color:rgb(6, 18, 37); color: white;" class="p-3 rounded shadow">
      <h3 class="text-center">Get More Practice</h3>
      <div class="d-flex justify-content-center">
      <img class="img-fluid text-center rounded shadow mb-3" src="owl.jpg" style="height: 200px; width: auto;">  
    </div>

      <div class="mb-3">
      <select class="form-select" aria-label="Default select example">
        <option selected>Pick a topic, choose your own adventure</option>
        <option value="oop">OOP</option>
        <option value="callbacks">Callbacks</option>
        <option value="closures">Closures</option>
        <option value="recursion">Recursion</option>
        <option value="async">Asynchronous</option>
      </select>
    </div>
    <div id="difficulty level" class="form-text text-center mb-2" style="color: white;">Up for a challenge?</div>
    <div class="mb-3">
      <select class="form-select" aria-label="Default select example">
        <option selected>Choose your level of difficulty</option>
        <option value="easy">Easy</option>
        <option value="moderate">Moderate</option>
        <option value="difficult">Difficult</option>
      </select>
    </div>
    <div id="difficulty level" class="form-text text-center mb-2" style="color: white;">Alright! ðŸ™Œ</div>
      <div class="d-flex justify-content-center">
        <button id="getQuestions" type="submit" class="btn btn-light">Test my knowledge</button>
      </div>
    </form>
    </div>
    </div> -->
    <div class="justify-content-center text-center rounded shadow m-3" style="background-color:rgb(6, 18, 37); color: white; min-height: fit-content;" id="knowledge">
    </br>
      <h2 class="knowledgeTitle">Study Area</h2>
      <row class="d-flex m-3 mb-3 flex-wrap justify-content-center">
      <% if (Object.keys(questions).length) { %>
        <% Object.keys(questions).forEach((key) => { %>
          <div class="card text-center m-2 col-3" style="width: 18rem;">
            <div class="card-body">
              <button class="btn btn-light button-hidden close-button">X</button>
              <p class="card-text"><%= key %></p>
              <pre class="card-text text-hidden concept" style="text-align: justify;"><%= questions[key] %></pre>
              <div class="d-flex justify-content-center">
                <button type="button" class="btn btn-dark reviewQuestion button-visible">Review</button>
                <form action="/dashboard?_method=PUT" method="POST">
                  <input type="hidden" name="editKey" value="<%= key%>">
                  <input type="hidden" name="notesKey" value="<%= questions[key] %>">
                  <input type="text" name="newQuestion" value="<%= key %>" class="updateQuestion text-hidden mb-2">
                  <textarea name="newNotes" class="updateNotes text-hidden"><%= questions[key] %></textarea>
                  <div class="justify-content-center">
                    <button class="btn btn-danger button-hidden submitNotes mt-2">Submit</button>
                  </div>
                </form>
                <button type="button" class="btn btn-success button-hidden editQuestion ms-2">Edit</button>
                <form action="/dashboard?_method=DELETE" method="POST"> 
                  <input type="hidden" name="questionKey" value="<%= key %>">
                  <button class="btn btn-danger deleteQuestion ms-2 button-hidden">Delete</button>
                </form>
              </div>
            </div>
            
          </div>
          
        <% }) %>
      </row>
      <div class="mb-2" style="height: 10px;">
        
      </div>
      <% } else { %>
        <p>No concepts yet</p>
      <% } %>
    </div>
    <div class="m-3" style="height: 100px;">

    </div>
  </br>

<%- include('./partials/footer.ejs') %>

<script>
  console.log("Script is running")
  document.addEventListener("DOMContentLoaded", function () {

// Create classes to toggle through 
const setClasses = (element, addClasses, removeClasses) => {
  element.classList.add(...addClasses);
  element.classList.remove(...removeClasses);
}

document.querySelectorAll('.reviewQuestion').forEach((button) => {

  // Get the current card 
  const cardBody = button.closest('.card-body');
  const notes = cardBody.querySelector('.card-text.notes-hidden');

  const elements = {
    closeButton: cardBody.querySelector('.close-button'),
    deleteButton: cardBody.querySelector('.deleteQuestion'),
    newQuestion: cardBody.querySelector('.updateQuestion'),
    newNotes: cardBody.querySelector('.updateNotes'),
    submitButton: cardBody.querySelector('.submitNotes'),
    editButton: cardBody.querySelector('.editQuestion'),
    reviewButton: button,
    concept: cardBody.querySelector('.concept')
  };

  // Review Button reveals concept, edit, delete and close buttons
  const handleReviewButton = () => {
    setClasses(elements.concept, ['text-visible'], ['text-hidden'])
    setClasses(elements.closeButton, ['button-visible'], ['button-hidden']);
    setClasses(elements.editButton, ['button-visible'], ['button-hidden']);
    setClasses(elements.deleteButton, ['button-visible'], ['button-hidden']);
    setClasses(elements.reviewButton, ['button-hidden'], ['button-visible']);
  };

  // Edit Button reveals edit inputs, submit button and hides delete button
  const handleEditButton = () => {
    setClasses(elements.editButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.deleteButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.submitButton, ['button-visible'], ['button-hidden']);
    setClasses(elements.newQuestion, ['text-visible'], ['text-hidden']);
    setClasses(elements.newNotes, ['text-visible'], ['text-hidden']);
  };

  // Close button hides everything and shows the review button
  const handleCloseButton = () => {
    setClasses(elements.editButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.deleteButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.newQuestion, ['text-hidden'], ['text-visible']);
    setClasses(elements.newNotes, ['text-hidden'], ['text-visible']);
    setClasses(elements.submitButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.reviewButton, ['button-visible'], ['button-hidden']);
    setClasses(elements.closeButton, ['button-hidden'], ['button-visible']);
    setClasses(elements.concept, ['text-hidden'], ['text-visible']);
  };

  button.addEventListener('click', handleReviewButton);
  elements.closeButton.addEventListener('click', handleCloseButton);
  elements.editButton.addEventListener('click', handleEditButton);

  });
});

</script>